{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/essais/Essai.js","views/essais/Essais.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Essai","props","useContext","EssaiContext","globalData","setGlonbalData","lg","className","essai","idEssai","idTypeEssai","to","nomTypeEssai","nomInstitution","sigleInstitution","emailInstitution","telephone1Institution","adresseInstitution","descriptionInstitution","latitudePosition","longitudePosition","altitudePosition","departementPosition","dateRealisationEssai","onClick","selectedEssai","idFichier","Essais","useState","details","setDetails","show","setShow","showError","setShowError","errorMessage","setLoadingState","data","setData","useEffect","setLoadingStateHead","fetch","process","then","response","json","essaiDetailsDto","catch","error","console","log","setTotalEssais","fetch_with_pagination","pageSize","pageNumber","loadingStateHead","setPageSize","currentPage","setActivePage","totalEssais","href","variant","color","loading","size","style","float","name","onChange","e","parseInt","target","value","outlined","items","fields","key","label","_style","width","sorter","filter","responsive","tableFilter","itemsPerPage","hover","onTableFilterChange","keyWord","scopedSlots","item","index","shape","id","position","indexOf","newDetails","slice","splice","toggleDetails","includes","connectedUser","institution","idInstitution","window","confirm","requestOptions","method","headers","UserService","getToken","newList","setTimeout","onDelete","activePage","pages","Math","floor","onActivePageChange","sm","autohide","fade","closeButton"],"mappings":"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","file":"static/js/8.6bf7c9fe.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useContext } from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport { Link } from 'react-router-dom';\nimport { EssaiContext } from \"../../EssaisContext\";\n\nconst Essai = (props) => {\n  const [globalData, setGlonbalData] = useContext(EssaiContext);\n  const handleOnClick = (essai) => {\n    setGlonbalData({...globalData, \n      selectedEssai: essai})\n  }\n  return (\n    <CRow>\n      <CCol lg={6}>\n        <CCard>\n          <CCardHeader  className=\"text-muted\">\n           Identifiant de l'essai : {props.essai.idEssai}\n          </CCardHeader>\n          <CCardBody>\n            <ul>\n              <li>Type d'essai :\n              {props.essai.idTypeEssai ?    <Link \n                to={`/type_essais/edit/${props.essai.idTypeEssai}`} \n                >{props.essai.nomTypeEssai}\n                </Link> \n                : ''}\n              </li>\n              <li>\n                <details>\n                  <summary>Institution : {props.essai.nomInstitution} ({props.essai.sigleInstitution})</summary>\n                  <ul>\n                    <li>Email : {props.essai.emailInstitution}</li>\n                    <li>Téléphone : {props.essai.telephone1Institution}</li>\n                    <li>Adresse : {props.essai.adresseInstitution}</li>\n                    <li>À propos : {props.essai.descriptionInstitution}</li>\n                  </ul>\n                </details>\n              </li>\n              {/* <li>Coordonnées : ({props.essai.position.latitude}, {props.essai.position.longitude}, {props.essai.position.altitude})</li>\n              <li>Adresse : {props.essai.position.adresse}</li> */}\n              <li>Latitute : {props.essai.latitudePosition}</li>\n              <li>Longitude : {props.essai.longitudePosition}</li>\n              <li>Altitude : {props.essai.altitudePosition}</li>\n              <li>Département : {props.essai.departementPosition}</li>\n              {/* <li>Créé le : {props.essai.createdDateEssai}</li> */}\n              <li>Date de réalisation: {props.essai.dateRealisationEssai}</li>\n              {/* <li>Dernière modification : {props.essai.lastModifiedDateEssai}</li>\n              <li>Modifié par: <a href=\"www.google.com\">{props.essai.lastModifiedByEssai}</a></li> */}\n              <li onClick={() => handleOnClick(props.essai)}><Link \n                to={`/pdf/${props.essai.idFichier}`} \n                >Voir PDF\n                </Link></li>\n            </ul>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Essai\n","import React, { useState, useEffect, useContext } from 'react'\nimport {\n  CCardBody,\n  CDataTable,\n  CPagination,\n  CButton,\n  CCollapse,\n  CCol,\n  CBadge,\n  CToast,\n  CToastBody,\n  CToastHeader,\n  CToaster,\n  CSelect,\n  CRow,\n\n} from '@coreui/react'\nimport Test from \"./Essai\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { EssaiContext } from \"../../EssaisContext\";\nimport UserService from \"../../../src/services/UserService\";\n\n\n  const Essais = () => {\n    const [globalData, setGlobalData] = useContext(EssaiContext);\n  const [details, setDetails] = useState([])\n\n      //__toaster\n      const [show, setShow] = useState(false);\n      const [showError, setShowError] = useState(false);\n      //__end toaster\n\n  const toggleDetails = (index,id) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n\n    setDetails(newDetails)\n  }\n\n  const fields = [\n    { key: 'codeEssai', label:'Code', _style: { width: '2%'} },\n    { key: 'nomTypeEssai', label:'Type d\\'essai', _style: { width: '20%'} },\n    { key: 'nomInstitution', label:'Institution', _style: { width: '20%'} },\n    // { key: 'departement', label:'Département', _style: { width: '20%'} },\n    // { key: 'adresse', label:'Adresse', _style: { width: '20%'} },\n    { key: 'nomFichier', label:'Fichier', _style: { width: '20%'} },\n    { key: 'dateRealisationEssai', label:'Date de réalisation', _style: { width: '10%'} },\n    {\n      key: 'show_details',\n      label: 'Actions',\n      _style: { width: '1%' },\n      sorter: false,\n      filter: false\n    }\n  ]\n\n  const [errorMessage, setErrorMessage] = useState('Echec du processus. Veuillez essayer ultérieurement !');\n  const [loadingState, setLoadingState] = useState(false);\n\n\n  const onDelete = (id) => {\n    if (window.confirm(\"Confirmer la suppression\")) {\n      const requestOptions = {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization': `Bearer ${UserService.getToken()}`,\n        \"Access-Control-Allow-Credentials\" : true  },\n      };\n      fetch(`${process.env.REACT_APP_API_URL}/api/essais/`+id, requestOptions)\n        .then(response => console.log(response))\n        .then(() => setShow(true))\n        .then(() => setLoadingState(false))\n        .catch((error) => {\n          console.log(error);\n          setShowError(true)\n          setLoadingState(false);\n        })\n      const newList = data.filter((item) => item.id !== id);\n      setData(newList);\n    } \n\n    setTimeout(() => {\n      setShow(false)\n      setShowError(false);\n    }, 3000)\n  }\n\n  \n  const [data, setData] = useState([])\n  useEffect(() => {\n    setLoadingStateHead(true);\n\n    fetch(`${process.env.REACT_APP_API_URL}/api/essais/fetch_with_pagination?pageSize=5&pageNumber=0`)\n      .then((response) => response.json())\n      .then((json) => setData(json.essaiDetailsDto))\n      .then(() => setLoadingStateHead(false))\n      .catch((error) => {\n        console.log(error);\n        setLoadingStateHead(false);\n      }); \n\n      fetch(`${process.env.REACT_APP_API_URL}/api/essais/count`)\n      .then((response) => response.json())\n      .then((json) => setTotalEssais(json))\n      .catch((error) => {\n        console.log(error);\n      }); \n    \n  }, [globalData]);\n  // useEffect(() => {\n  //   setLoadingStateHead(true);\n\n  //   fetch(`${process.env.REACT_APP_API_URL}/api/essais/`)\n  //     .then((response) => response.json())\n  //     .then((json) => setData(json))\n  //     .then(() => setLoadingStateHead(false))\n  //     .catch((error) => {\n  //       console.log(error);\n  //       setLoadingStateHead(false);\n  //     }); \n    \n  // }, []);\n  \n  const fetch_with_pagination = (pageSize, pageNumber) => {\n    console.log('fetch pagiination')\n    fetch(`${process.env.REACT_APP_API_URL}/api/essais/fetch_with_pagination?pageSize=${pageSize}&pageNumber=${pageNumber > 0 ? pageNumber : 0}`)\n    .then((response) => response.json())\n    .then((json) => setData(json.essaiDetailsDto))\n    .then(() => setLoadingStateHead(false))\n    .catch((error) => {\n      console.log(error);\n      setLoadingStateHead(false);\n    }); \n  }\n\n  const [loadingStateHead, setLoadingStateHead] = useState(false);\n\n\n \n    //  const getInstitutionOfActualUser = () =>{\n    //   //   var idIns;\n    //     fetch(`${process.env.REACT_APP_API_URL}/api/utilisateurs/search?username=${UserService.getUsername()}`)\n    //   .then((response) => response.json())\n    //   //   return idIns;   // The function returns the product of p1 and p2\n\n    //   }\n  \nconst [pageSize, setPageSize] = useState(5)\nconst [currentPage, setActivePage] = useState(0);\nconst [totalEssais, setTotalEssais] = useState(0);\n  return (\n    <div>\n          <a href=\"/#/tests/create\" >   \n            <CButton variant=\"outline\" color=\"success\">Ajouter</CButton>\n            <ClipLoader loading={loadingStateHead} size={25} />\n         </a>\n    \n\n         <CRow style={{float:'right'}}>\n      <CCol > Essais par page\n          <CSelect name=' Essais par page' onChange={(e)=>{\n              setPageSize(parseInt(e.target.value) );\n                fetch_with_pagination(e.target.value, 0);\n             \n            }}\n            className={`form-control shadow-none `}>\n                     <option value={5}>5</option>\n                      <option value={10}>10</option>\n                      <option value={20}>20</option>\n                      <option value={50}>50</option>\n            </CSelect>\n        </CCol>\n        </CRow>\n\n          <CDataTable outlined\n      items={data ? data : null}\n      fields={fields}\n      // dark\n      responsive\n      // columnFilter\n      tableFilter\n      // footer\n      // itemsPerPageSelect={{\n      //   label:'Essais par page',\n      //   // values:[5, 10, 20, 50],\n      //   // external:true\n      // }}\n      itemsPerPage ={pageSize}\n    \n      // pagination-change={(i) =>console.log(i)}\n      hover\n      sorter\n      onTableFilterChange={(keyWord) => console.log('JERE FILTR A'.keyWord)}\n      // pagination={{\n      //   pages:15\n      // }}\n      // onPageChange={(pageNumber) => fetch_with_pagination(5, pageNumber)\n      //   // console.log('Page ', page\n      //   }\n\n      scopedSlots = {{\n        'show_details':\n          (item, index)=>{\n            return (\n              <td className=\"py-2\">\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={()=>{toggleDetails(index,item.id)}}\n                >\n                  {details.includes(index) ? 'Cacher' : 'Voir'}\n                </CButton>                          \n              </td>\n              )\n          },\n       \n        'details':\n            (item, index)=>{\n              return (\n              <CCollapse show={details.includes(index)}>\n                <Test essai = {item} />\n                {globalData.connectedUser ?\n                <>\n                  {globalData.connectedUser.institution.id === item.idInstitution ?\n                  <CCardBody>\n                    <a href={`/#/tests/edit/${item.idEssai}`}> \n                      <CButton size=\"sm\" color=\"info\">\n                        Modifier\n                      </CButton>\n                    </a>\n                      <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick= {() =>{onDelete(item.idEssai)}}>\n                        Supprimmer\n                      </CButton>\n                  </CCardBody>\n                  :'' }\n                </> : null}\n              </CCollapse>\n            )\n          }\n      }}\n    />\n    <CPagination\n      activePage={currentPage}\n      pages={Math.floor(totalEssais/pageSize)}\n      onActivePageChange={(pageNumber) =>{\n        setActivePage(pageNumber);\n        fetch_with_pagination(pageSize,pageNumber-1);\n      } }\n    ></CPagination>\n\n         {/* SHOW SUCCES */}\n         <CCol sm=\"12\" lg=\"6\">\n    <CToaster\n      position={'top-right'}\n      > \n          <CToast\n            show={show}\n            autohide={true && 4000}\n            fade={true}\n          >\n            <CToastHeader closeButton={true}>\n            <CBadge className=\"mr-1\" color=\"success\">SUCCÈS</CBadge>              \n            </CToastHeader>\n            <CToastBody  color=\"success\">\n              Opération réussie !\n            </CToastBody>\n          </CToast>\n      </CToaster>\n    </CCol>\n\n    {/* SHOW ERROR */}\n    <CCol sm=\"12\" lg=\"6\">\n          <CToaster\n            position={'top-right'}\n          > \n                <CToast\n                  show={showError}\n                  autohide={true && 4000}\n                  fade={true}\n                >\n                  <CToastHeader closeButton={true}>\n                  <CBadge className=\"mr-1\" color=\"danger\">ECHEC</CBadge>              \n                  </CToastHeader>\n                  <CToastBody  color=\"success\">\n                    {errorMessage}\n                  </CToastBody>\n                </CToast>\n          </CToaster>\n        </CCol>\n    </div>\n    \n  )\n    }\n  export default Essais"],"sourceRoot":""}