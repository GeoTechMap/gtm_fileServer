{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/users/User.js","views/users/Users.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","User","props","lg","className","utilisateur","id","nom","prenom","email","telephone","institution","createdDate","lastModifiedDate","Utilisateurs","useState","details","setDetails","data","setData","useEffect","setLoadingState","fetch","process","then","response","json","catch","error","console","log","loadingState","to","variant","color","loading","size","items","fields","key","label","_style","width","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","index","shape","onClick","position","indexOf","newDetails","slice","splice","toggleDetails","includes","sigle","show","window","confirm","method","newList","onDelete"],"mappings":"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","file":"static/js/11.583508bf.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst User = (props) => {\n  return (\n    <CRow>\n      <CCol lg={6}>\n        <CCard>\n          <CCardHeader  className=\"text-muted\">\n           Identifiant de l'utilisateur : {props.utilisateur.id}\n          </CCardHeader>\n          <CCardBody>\n            <ul>\n              <li> Nom : {props.utilisateur.nom}</li>\n              <li> Prénom : {props.utilisateur.prenom}</li>\n              <li> Email : {props.utilisateur.email}</li>\n              <li> Téléphone : {props.utilisateur.telephone}</li>\n              <li> Institution : {props.utilisateur.institution.nom}</li>\n              <li> Créé le : {props.utilisateur.createdDate}</li>\n              <li> Dernière modification : {props.utilisateur.lastModifiedDate}</li>\n            </ul>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport {\n  CCardBody,\n  CDataTable,\n  CButton,\n  CCollapse,\n  CLink\n} from '@coreui/react'\nimport User from \"./User\";\nimport UserService from \"../../../src/services/UserService\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n  const Utilisateurs = () => {\n  const [details, setDetails] = useState([])\n\n  const toggleDetails = (index,id) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n\n    setDetails(newDetails)\n  }\n\n  const fields = [\n    { key: 'id', label:'ID', _style: { width: '2%'} },\n    { key: 'nom', label:'Nom', _style: { width: '20%'} },\n    { key: 'prenom', label:'Prénom', _style: { width: '20%'} },\n    { key: 'username', label:'Nom d\\'utilisateur', _style: { width: '20%'} },\n    { key: 'email', label:'Email', _style: { width: '20%'} },\n    { key: 'institution', label:'Institution', _style: { width: '20%'} },\n    { key: 'createdDate', label:'Date de création', _style: { width: '10%'} },\n    {\n      key: 'show_details',\n      label: 'Actions',\n      _style: { width: '1%' },\n      sorter: false,\n      filter: false\n    }\n  ]\n\n  const onDelete = (id) => {\n    if (window.confirm(\"Confirmer la suppression\")) {\n      const requestOptions = {\n        method: 'DELETE'\n      };\n      fetch(`${process.env.REACT_APP_API_URL}/api/utilisateurs/`+id, requestOptions)\n        .then(response => console.log(response))\n      const newList = data.filter((item) => item.id !== id);\n      setData(newList);\n    } else {\n      \n    }\n  }\n\n  function bearerAuth(token) {\n    return `Bearer ${token}`\n  }\n\n  const [data, setData] = useState([])\n  useEffect(() => {\n    setLoadingState(true);\n\n    fetch(`${process.env.REACT_APP_API_URL}/api/utilisateurs/`)\n      .then((response) => response.json())\n      .then((json) => setData(json))\n      .then(() => setLoadingState(false))\n      .catch((error) => {\n        console.log(error);\n        setLoadingState(false);\n      }); \n    \n  }, []);\n\n  const [loadingState, setLoadingState] = useState(false);\n  return (\n    <div>\n          <CLink to=\"/utilisateurs/create\" >   \n            <CButton variant=\"outline\" color=\"success\">Ajouter</CButton>\n            <ClipLoader loading={loadingState} size={25} />\n          </CLink>\n            \n          <CDataTable\n      items={data ? data : null}\n      fields={fields}\n      columnFilter\n      tableFilter\n      footer\n      itemsPerPageSelect\n      itemsPerPage={5}\n      hover\n      sorter\n      pagination\n      scopedSlots = {{\n        'show_details':\n          (item, index)=>{\n            return (\n              <td className=\"py-2\">\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={()=>{toggleDetails(index,item.id)}}\n                >\n                  {details.includes(index) ? 'Cacher' : 'Voir'}\n                </CButton>                          \n              </td>\n              )\n          },\n          'institution':\n          (item)=>{\n            return (\n              item.institution ? <td>{item.institution.nom} ({item.institution.sigle})</td>\n              : ''\n              \n              )\n          },\n        'details':\n            (item, index)=>{\n              return (\n              <CCollapse show={details.includes(index)}>\n                <User utilisateur = {item} />\n                <CCardBody>\n                  <CLink to={`/#/utilisateurs/edit/${item.id}`}> \n                    <CButton size=\"sm\" color=\"info\">\n                      Modifier\n                    </CButton>\n                  </CLink>\n                  <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick= {() =>{onDelete(item.id)}}>\n                    Supprimmer\n                  </CButton>\n                </CCardBody>\n              </CCollapse>\n            )\n          }\n      }}\n    />\n    </div>\n    \n  )\n    }\n  export default Utilisateurs"],"sourceRoot":""}