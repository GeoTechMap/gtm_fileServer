{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/test_types/TestTypes.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","TestTypes","useState","show","showError","details","setDetails","errorMessage","data","setData","useEffect","setLoadingStateHead","fetch","process","then","response","json","catch","error","console","log","loadingStateHead","to","variant","color","loading","size","items","fields","key","label","_style","width","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","index","className","shape","onClick","id","position","indexOf","newDetails","slice","splice","toggleDetails","includes","testType","sm","lg","autohide","fade","closeButton"],"mappings":"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","file":"static/js/18.b25403e9.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCardBody,\r\n  CDataTable,\r\n  CButton,\r\n  CCollapse,\r\n  CCol,\r\n  CBadge,\r\n  CToast,\r\n  CToastBody,\r\n  CToastHeader,\r\n  CToaster,\r\n  CLink\r\n} from '@coreui/react'\r\nimport TestType from \"./TestType\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport UserService from \"../../../src/services/UserService\";\r\n\r\n  const TestTypes = () => {\r\n      //__toaster\r\n  const [show, setShow] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n  //__end toaster\r\n  const [details, setDetails] = useState([])\r\n\r\n  const toggleDetails = (index,id) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    }\r\n\r\n    setDetails(newDetails)\r\n  }\r\n\r\n  const fields = [\r\n    { key: 'id', label:'ID', _style: { width: '2%'} },\r\n    { key: 'nom', label:'Nom', _style: { width: '20%'} },\r\n    { key: 'sigle', label:'Abbréviation', _style: { width: '20%'} },\r\n    { key: 'description', label:'Description', _style: { width: '20%'} },\r\n    { key: 'createdDate', label:'Date de création', _style: { width: '10%'} },\r\n    {\r\n      key: 'show_details',\r\n      label: 'Actions',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    }\r\n  ]\r\n\r\n  const [errorMessage, setErrorMessage] = useState('Echec du processus. Veuillez essayer ultérieurement !');\r\n  const [loadingState, setLoadingState] = useState(false);\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm(\"Confirmer la suppression\")) {\r\n      setLoadingState(true);\r\n      const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${UserService.getToken()}`,\r\n        \"Access-Control-Allow-Credentials\" : true  },\r\n      };\r\n      fetch(`${process.env.REACT_APP_API_URL}/api/type_essais/`+id, requestOptions)\r\n        .then(response => console.log(response))\r\n        .then(() => setShow(true))\r\n        .then(() => setLoadingState(false))\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setShowError(true)\r\n          setLoadingState(false);\r\n        })\r\n      const newList = data.filter((item) => item.id !== id);\r\n      setData(newList);\r\n    } \r\n\r\n    setTimeout(() => {\r\n      setShow(false)\r\n      setShowError(false);\r\n    }, 3000)\r\n  }\r\n\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    setLoadingStateHead(true);\r\n    \r\n    fetch(`${process.env.REACT_APP_API_URL}/api/type_essais/`)\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .then(() => setLoadingStateHead(false))\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setLoadingStateHead(false);\r\n      }); \r\n     \r\n    \r\n  }, []);\r\n  \r\n  const [loadingStateHead, setLoadingStateHead] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n          <CLink to=\"/test_types/create\" >   \r\n            <CButton variant=\"outline\" color=\"success\">Ajouter</CButton>\r\n            <ClipLoader loading={loadingStateHead} size={25} />\r\n          </CLink>\r\n            \r\n          <CDataTable\r\n      items={data ? data : null}\r\n      fields={fields}\r\n      columnFilter\r\n      tableFilter\r\n      footer\r\n      itemsPerPageSelect\r\n      itemsPerPage={5}\r\n      hover\r\n      sorter\r\n      pagination\r\n      scopedSlots = {{\r\n        'show_details':\r\n          (item, index)=>{\r\n            return (\r\n              <td className=\"py-2\">\r\n                <CButton\r\n                  color=\"primary\"\r\n                  variant=\"outline\"\r\n                  shape=\"square\"\r\n                  size=\"sm\"\r\n                  onClick={()=>{toggleDetails(index,item.id)}}\r\n                >\r\n                  {details.includes(index) ? 'Cacher' : 'Voir'}\r\n                </CButton>                          \r\n              </td>\r\n              )\r\n          },\r\n        'details':\r\n            (item, index)=>{\r\n              return (\r\n              <CCollapse show={details.includes(index)}>\r\n                <TestType testType = {item} />\r\n                <CCardBody>\r\n                  <CLink to={`/test_types/edit/${item.id}`}> \r\n                    <CButton size=\"sm\" color=\"info\">\r\n                      Modifier\r\n                    </CButton>\r\n                  </CLink>\r\n                  {/* <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick= {() =>{onDelete(item.id)}}>\r\n                    Supprimer   <ClipLoader loading={loadingState} size={15} />\r\n                  </CButton> */}\r\n                </CCardBody>\r\n              </CCollapse>\r\n            )\r\n          }\r\n      }}\r\n    />\r\n\r\n     {/* SHOW SUCCES */}\r\n     <CCol sm=\"12\" lg=\"6\">\r\n    <CToaster\r\n      position={'top-right'}\r\n      > \r\n          <CToast\r\n            show={show}\r\n            autohide={true && 4000}\r\n            fade={true}\r\n          >\r\n            <CToastHeader closeButton={true}>\r\n            <CBadge className=\"mr-1\" color=\"success\">SUCCÈS</CBadge>              \r\n            </CToastHeader>\r\n            <CToastBody  color=\"success\">\r\n              Opération réussie !\r\n            </CToastBody>\r\n          </CToast>\r\n      </CToaster>\r\n    </CCol>\r\n\r\n    {/* SHOW ERROR */}\r\n    <CCol sm=\"12\" lg=\"6\">\r\n          <CToaster\r\n            position={'top-right'}\r\n          > \r\n                <CToast\r\n                  show={showError}\r\n                  autohide={true && 4000}\r\n                  fade={true}\r\n                >\r\n                  <CToastHeader closeButton={true}>\r\n                  <CBadge className=\"mr-1\" color=\"danger\">ECHEC</CBadge>              \r\n                  </CToastHeader>\r\n                  <CToastBody  color=\"success\">\r\n                    {errorMessage}\r\n                  </CToastBody>\r\n                </CToast>\r\n          </CToaster>\r\n        </CCol>\r\n    </div>\r\n    \r\n  )\r\n    }\r\n  export default TestTypes"],"sourceRoot":""}