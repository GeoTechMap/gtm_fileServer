{"version":3,"sources":["views/charts/MainChartExample.js","views/dashboard/Dashboard.js"],"names":["getStyle","WidgetsDropdown","lazy","Dashboard","useContext","EssaiContext","globalData","useState","undefined","datasets","label","backgroundColor","listCouleurTypeEssais","data","listValeursTypeEssais","labels","listeNomTypeEssais","options","tooltips","enabled"],"mappings":"2PAIqBA,mBAAS,WACZA,mBAAS,QACPA,mBAAS,U,QCqBvBC,EAAkBC,gBAAK,kBAAM,iCAoEpBC,UAjEG,WAAO,IAAD,EAEeC,qBAAWC,KAF1B,mBAEfC,EAFe,aA0BoBC,mBAAS,KA1B7B,gCA2B8BA,mBAAS,KA3BvC,gCA4BoCA,mBAAS,KA5B7C,6BA+BtB,YAAmBC,IAAfF,EACK,sDAIP,qCACE,cAACL,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,oFAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEQ,SAAU,CACR,CACEC,MAAO,kBACPC,gBAAiBL,EAAWM,sBAC5BC,KAAMP,EAAWQ,wBAGrBC,OAAQT,EAAWU,mBACnBC,QAAS,CACPC,SAAU,CACRC,SAAS","file":"static/js/21.b5b23125.chunk.js","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\n\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChartExample = attributes => {\n  const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 27\n    const data1 = []\n    const data2 = []\n    const data3 = []\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200))\n      data2.push(random(80, 100))\n      data3.push(65)\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\n    />\n  )\n}\n\n\nexport default MainChartExample\n","import React, { lazy, useEffect, useState, useContext } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n} from '@coreui/react'\nimport {\n  CChartBar,\n  CChartLine,\n  CChartDoughnut,\n  CChartRadar,\n  CChartPie,\n  CChartPolarArea\n} from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\n\nimport MainChartExample from '../charts/MainChartExample.js'\nimport { EssaiContext } from \"../../EssaisContext\";\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst Dashboard = () => {\n\n  const [globalData, setGlonbalData] = useContext(EssaiContext);\n\n  // useEffect(() => {\n  //   fetch('http://localhost:8080/api/type_essais')\n  //     .then((response) => response.json())\n  //     .then((json) => setAllTypeEssais(json))\n  //     .then(() => \n  //       setListNomsTypeEssais(\n  //         allTypeEssais.map((typeEssai, key) => (\n  //           typeEssai.nom\n  //      ))\n  //       )\n  //     )\n  //     .then(() =>\n  //     setListValeursTypeEssais(\n  //       allTypeEssais.map((typeEssai, key) => (\n  //         typeEssai.essais.length\n  //    ))\n  //     ))\n\n  //     .catch((err) => console.log(err))\n    \n  // }, []);\n\n  const [allTypeEssais, setAllTypeEssais] = useState([]);\n  const [listNomsTypeEssais, setListNomsTypeEssais] = useState([]);\n  const [listValeursTypeEssais, setListValeursTypeEssais] = useState([]);\n\n\n  if (globalData === undefined) {\n    return <>Chargement ...</>;\n  }\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard>\n        <CCardHeader>\n       Graphe du nombre d'essais g√©otechniquess en fonctions de leur type\n        </CCardHeader>\n        <CCardBody>\n          <CChartBar\n            datasets={[\n              {\n                label: 'Nombre d\\'essais',\n                backgroundColor: globalData.listCouleurTypeEssais,\n                data: globalData.listValeursTypeEssais\n              }\n            ]}\n            labels={globalData.listeNomTypeEssais}\n            options={{\n              tooltips: {\n                enabled: true\n              }\n            }}\n          />\n        </CCardBody>\n      </CCard>\n\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}