{"version":3,"sources":["views/charts/MainChartExample.js","views/dashboard/Dashboard.js"],"names":["getStyle","WidgetsDropdown","lazy","Dashboard","useContext","EssaiContext","globalData","useState","undefined","datasets","label","backgroundColor","listCouleurTypeEssais","data","listValeursTypeEssais","labels","listeNomTypeEssais","options","tooltips","enabled"],"mappings":"2PAIqBA,mBAAS,WACZA,mBAAS,QACPA,mBAAS,U,QCqBvBC,EAAkBC,gBAAK,kBAAM,iCAoEpBC,UAjEG,WAAO,IAAD,EAEeC,qBAAWC,KAF1B,mBAEfC,EAFe,aA0BoBC,mBAAS,KA1B7B,gCA2B8BA,mBAAS,KA3BvC,gCA4BoCA,mBAAS,KA5B7C,6BA+BtB,YAAmBC,IAAfF,EACK,sDAIP,qCACE,cAACL,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,mFAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEQ,SAAU,CACR,CACEC,MAAO,kBACPC,gBAAiBL,EAAWM,sBAC5BC,KAAMP,EAAWQ,wBAGrBC,OAAQT,EAAWU,mBACnBC,QAAS,CACPC,SAAU,CACRC,SAAS","file":"static/js/21.82a21d2d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst MainChartExample = attributes => {\r\n  const random = (min, max)=>{\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  const defaultDatasets = (()=>{\r\n    let elements = 27\r\n    const data1 = []\r\n    const data2 = []\r\n    const data3 = []\r\n    for (let i = 0; i <= elements; i++) {\r\n      data1.push(random(50, 200))\r\n      data2.push(random(80, 100))\r\n      data3.push(65)\r\n    }\r\n    return [\r\n      {\r\n        label: 'My First dataset',\r\n        backgroundColor: hexToRgba(brandInfo, 10),\r\n        borderColor: brandInfo,\r\n        pointHoverBackgroundColor: brandInfo,\r\n        borderWidth: 2,\r\n        data: data1\r\n      },\r\n      {\r\n        label: 'My Second dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandSuccess,\r\n        pointHoverBackgroundColor: brandSuccess,\r\n        borderWidth: 2,\r\n        data: data2\r\n      },\r\n      {\r\n        label: 'My Third dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandDanger,\r\n        pointHoverBackgroundColor: brandDanger,\r\n        borderWidth: 1,\r\n        borderDash: [8, 5],\r\n        data: data3\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            gridLines: {\r\n              drawOnChartArea: false\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n              maxTicksLimit: 5,\r\n              stepSize: Math.ceil(250 / 5),\r\n              max: 250\r\n            },\r\n            gridLines: {\r\n              display: true\r\n            }\r\n          }]\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            hitRadius: 10,\r\n            hoverRadius: 4,\r\n            hoverBorderWidth: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  )()\r\n\r\n  // render\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default MainChartExample\r\n","import React, { lazy, useEffect, useState, useContext } from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CCallout,\r\n} from '@coreui/react'\r\nimport {\r\n  CChartBar,\r\n  CChartLine,\r\n  CChartDoughnut,\r\n  CChartRadar,\r\n  CChartPie,\r\n  CChartPolarArea\r\n} from '@coreui/react-chartjs'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport MainChartExample from '../charts/MainChartExample.js'\r\nimport { EssaiContext } from \"../../EssaisContext\";\r\n\r\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\r\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\r\n\r\nconst Dashboard = () => {\r\n\r\n  const [globalData, setGlonbalData] = useContext(EssaiContext);\r\n\r\n  // useEffect(() => {\r\n  //   fetch('http://localhost:8080/api/type_essais')\r\n  //     .then((response) => response.json())\r\n  //     .then((json) => setAllTypeEssais(json))\r\n  //     .then(() => \r\n  //       setListNomsTypeEssais(\r\n  //         allTypeEssais.map((typeEssai, key) => (\r\n  //           typeEssai.nom\r\n  //      ))\r\n  //       )\r\n  //     )\r\n  //     .then(() =>\r\n  //     setListValeursTypeEssais(\r\n  //       allTypeEssais.map((typeEssai, key) => (\r\n  //         typeEssai.essais.length\r\n  //    ))\r\n  //     ))\r\n\r\n  //     .catch((err) => console.log(err))\r\n    \r\n  // }, []);\r\n\r\n  const [allTypeEssais, setAllTypeEssais] = useState([]);\r\n  const [listNomsTypeEssais, setListNomsTypeEssais] = useState([]);\r\n  const [listValeursTypeEssais, setListValeursTypeEssais] = useState([]);\r\n\r\n\r\n  if (globalData === undefined) {\r\n    return <>Chargement ...</>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <WidgetsDropdown />\r\n      <CCard>\r\n        <CCardHeader>\r\n       Graphe du nombre d'essais g√©otechniques en fonctions de leur type\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartBar\r\n            datasets={[\r\n              {\r\n                label: 'Nombre d\\'essais',\r\n                backgroundColor: globalData.listCouleurTypeEssais,\r\n                data: globalData.listValeursTypeEssais\r\n              }\r\n            ]}\r\n            labels={globalData.listeNomTypeEssais}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}