{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/faqs/Faq.js","views/faqs/Faqs.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Faq","props","lg","className","faq","question","response","createdDate","createdBy","lastModifiedDate","lastModifiedBy","Faqs","useState","show","setShow","showError","setShowError","details","setDetails","errorMessage","loadingState","setLoadingState","data","setData","useEffect","setLoadingStateHead","fetch","process","then","json","catch","error","console","log","loadingStateHead","href","variant","color","loading","size","items","fields","key","label","_style","width","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","index","shape","onClick","id","position","indexOf","newDetails","slice","splice","toggleDetails","includes","window","confirm","requestOptions","method","headers","UserService","getToken","newList","setTimeout","onDelete","sm","autohide","fade","closeButton"],"mappings":"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","file":"static/js/16.f568334f.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\n\nconst Faq = (props) => {\n  return (\n    <CRow>\n      <CCol lg={6}>\n        <CCard>\n          <CCardHeader  className=\"text-muted\">\n           FAQS\n          </CCardHeader>\n          <CCardBody>\n            <ul>\n              <li>Question : {props.faq.question}</li>\n              <li>Reponse : {props.faq.response}</li>\n\n              <li>Créée le : {props.faq.createdDate}</li>\n              <li>Créée par :{props.faq.createdBy}</li>\n              <li>Dernière modification : {props.faq.lastModifiedDate}</li>\n              <li>Modifiée par: {props.faq.lastModifiedBy}</li>\n            </ul>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Faq\n","import React, { useState, useEffect } from 'react'\nimport {\n  CCardBody,\n  CDataTable,\n  CButton,\n  CCollapse,\n  CCol,\n  CBadge,\n  CToast,\n  CToastBody,\n  CToastHeader,\n  CToaster,\n} from '@coreui/react'\nimport Faq from \"./Faq\";\nimport UserService from \"../../services/UserService\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n  const Faqs = () => {\n          //__toaster\n  const [show, setShow] = useState(false);\n  const [showError, setShowError] = useState(false);\n  //__end toaster\n  const [details, setDetails] = useState([])\n\n  const toggleDetails = (index,id) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n\n    setDetails(newDetails)\n  }\n\n  const fields = [\n    { key: 'id', label:'ID', _style: { width: '2%'} },\n    { key: 'question', label:'Question', _style: { width: '20%'} },\n    { key: 'response', label:'Reponse', _style: { width: '20%'} },\n    { key: 'createdDate', label:'Date de création', _style: { width: '10%'} },\n    {\n      key: 'show_details',\n      label: 'Actions',\n      _style: { width: '1%' },\n      sorter: false,\n      filter: false\n    }\n  ]\n\n  const [errorMessage, setErrorMessage] = useState('Echec du processus. Veuillez essayer ultérieurement !');\n  const [loadingState, setLoadingState] = useState(false);\n\n  const onDelete = (id) => {\n    if (window.confirm(\"Confirmer la suppression\")) {\n      const requestOptions = {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json',\n        'Authorization': `Bearer ${UserService.getToken()}`,\n        \"Access-Control-Allow-Credentials\" : true  },\n      };\n      fetch(`${process.env.REACT_APP_API_URL}/api/faqs/`+id, requestOptions)\n        .then(response => console.log(response))\n        .then(() => setShow(true))\n        .then(() => setLoadingState(false))\n        .catch((error) => {\n          console.log(error);\n          setShowError(true)\n          setLoadingState(false);\n        })\n      const newList = data.filter((item) => item.id !== id);\n      setData(newList);\n    } \n    setTimeout(() => {\n      setShow(false)\n      setShowError(false);\n    }, 3000)\n  }\n\n  function bearerAuth(token) {\n    return `Bearer ${token}`\n  }\n\n  const [data, setData] = useState([])\n  useEffect(() => {\n    setLoadingStateHead(true);\n    \n    fetch(`${process.env.REACT_APP_API_URL}/api/faqs/`)\n      .then((response) => response.json())\n      .then((json) => setData(json))\n      .then(() =>   setLoadingStateHead(false))\n      .catch((error) => {\n        console.log(error);\n        setLoadingStateHead(false);\n      }); \n    \n  }, []);\n\n  const [loadingStateHead, setLoadingStateHead] = useState(false);\n\n  return (\n    <div>\n          <a href=\"/#/faqs/create\" >   \n            <CButton variant=\"outline\" color=\"success\">Ajouter</CButton>\n            <ClipLoader loading={loadingStateHead} size={25} />\n          </a>\n            \n          <CDataTable\n      items={data ? data : null}\n      fields={fields}\n      columnFilter\n      tableFilter\n      footer\n      itemsPerPageSelect\n      itemsPerPage={5}\n      hover\n      sorter\n      pagination\n      scopedSlots = {{\n        'show_details':\n          (item, index)=>{\n            return (\n              <td className=\"py-2\">\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={()=>{toggleDetails(index,item.id)}}\n                >\n                  {details.includes(index) ? 'Cacher' : 'Voir'}\n                </CButton>                          \n              </td>\n              )\n          },\n        'details':\n            (item, index)=>{\n              return (\n              <CCollapse show={details.includes(index)}>\n                <Faq faq = {item} />\n                <CCardBody>\n                  <a href={`/#/faqs/edit/${item.id}`}> \n                    <CButton size=\"sm\" color=\"info\">\n                      Modifier\n                    </CButton>\n                  </a>\n                  <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick= {() =>{onDelete(item.id)}}>\n                    Supprimmer  <ClipLoader loading={loadingState} size={15} />\n                  </CButton>\n                </CCardBody>\n              </CCollapse>\n            )\n          }\n      }}\n    />\n\n       {/* SHOW SUCCES */}\n       <CCol sm=\"12\" lg=\"6\">\n    <CToaster\n      position={'top-right'}\n      > \n          <CToast\n            show={show}\n            autohide={true && 4000}\n            fade={true}\n          >\n            <CToastHeader closeButton={true}>\n            <CBadge className=\"mr-1\" color=\"success\">SUCCÈS</CBadge>              \n            </CToastHeader>\n            <CToastBody  color=\"success\">\n              Opération réussie !\n            </CToastBody>\n          </CToast>\n      </CToaster>\n    </CCol>\n\n    {/* SHOW ERROR */}\n    <CCol sm=\"12\" lg=\"6\">\n          <CToaster\n            position={'top-right'}\n          > \n                <CToast\n                  show={showError}\n                  autohide={true && 4000}\n                  fade={true}\n                >\n                  <CToastHeader closeButton={true}>\n                  <CBadge className=\"mr-1\" color=\"danger\">ECHEC</CBadge>              \n                  </CToastHeader>\n                  <CToastBody  color=\"success\">\n                    {errorMessage}\n                  </CToastBody>\n                </CToast>\n          </CToaster>\n        </CCol>\n    </div>\n    \n  )\n    }\n  export default Faqs"],"sourceRoot":""}